// <auto-generated />
using BankAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BankAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230428145054_balanceInitial")]
    partial class balanceInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BankAPI.Models.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("balance")
                        .HasColumnType("numeric");

                    b.Property<int>("cardInfoID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("cardInfoID")
                        .IsUnique();

                    b.ToTable("balances");
                });

            modelBuilder.Entity("BankAPI.Models.CardInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CardCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("cardInfos");
                });

            modelBuilder.Entity("BankAPI.Models.PinCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CardInfoId")
                        .IsUnique();

                    b.ToTable("pinCodes");
                });

            modelBuilder.Entity("BankAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CardInfoId")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("BankAPI.Models.Balance", b =>
                {
                    b.HasOne("BankAPI.Models.CardInfo", "cardInfo")
                        .WithOne("Balance")
                        .HasForeignKey("BankAPI.Models.Balance", "cardInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cardInfo");
                });

            modelBuilder.Entity("BankAPI.Models.PinCode", b =>
                {
                    b.HasOne("BankAPI.Models.CardInfo", "CardInfo")
                        .WithOne("PinCode")
                        .HasForeignKey("BankAPI.Models.PinCode", "CardInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardInfo");
                });

            modelBuilder.Entity("BankAPI.Models.User", b =>
                {
                    b.HasOne("BankAPI.Models.CardInfo", "CardInfo")
                        .WithOne("User")
                        .HasForeignKey("BankAPI.Models.User", "CardInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardInfo");
                });

            modelBuilder.Entity("BankAPI.Models.CardInfo", b =>
                {
                    b.Navigation("Balance")
                        .IsRequired();

                    b.Navigation("PinCode")
                        .IsRequired();

                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
